name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: Python 3.12 tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install system packages for PyQt (if needed)
        run: sudo apt-get update && sudo apt-get install -y libegl1 libxkbcommon-x11-0 xvfb

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest pytest-cov

      - name: Run tests (headless, with coverage)
        env:
          QT_QPA_PLATFORM: offscreen
        run: |
          xvfb-run -a pytest --maxfail=1 --cov=. \
            --cov-report=term-missing:skip-covered --cov-report=xml \
            --junitxml=pytest-report.xml -q

      - name: Fail if zero tests collected
        run: |
          if grep -q 'tests="0"' pytest-report.xml; then
            echo 'No tests collected. Failing.'
            exit 1
          else
            echo 'Tests collected:'
            grep -o 'tests="[0-9]\+"' pytest-report.xml | head -1
          fi

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            pytest-report.xml
            coverage.xml
          if-no-files-found: warn
          retention-days: 7

      # Optional coverage threshold enforcement example:
      # - name: Enforce minimum coverage
      #   run: |
      #     RATE=$(grep -o 'line-rate="[0-9.]*"' coverage.xml | head -1 | cut -d'"' -f2)
      #     REQ=70
      #     INT=${RATE%.*}
      #     echo "Coverage: $RATE% (required $REQ%)"
      #     if [ "$INT" -lt "$REQ" ]; then echo "Coverage below threshold"; exit 1; fi

  # Optional static analysis with Qodana (uncomment to enable)
  # qodana:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Qodana Scan
  #       uses: JetBrains/qodana-action@v2024.1
  #       with:
  #         cache-default-branch-only: true
  #     - name: Upload Qodana Report
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: qodana-report
  #         path: .qodana
